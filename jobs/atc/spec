---
name: atc

description: |
  The ATC (Air Traffic Controller) provides UI and API access. It is
  responsible for scheduling builds and detecting versions of your resources.

templates:
  atc_ctl.erb: bin/atc_ctl

packages:
  - pid_utils
  - atc
  - fly
  - generated_signing_key

properties:
  atc.web_bind_ip:
    description: |
      IP address for the web server to listen on.
    default: 0.0.0.0

  atc.web_bind_port:
    description: |
      Port for the web server to listen on.
    default: 8080

  atc.external_url:
    description: |
      Externally reachable URL of the ATCs. Required for OAuth.

      Typically this is the URL that you as a user would use to reach your CI.
      For multiple ATCs it would go to some sort of load balancer.

  atc.peer_url:
    description: |
      Address used internally to reach the ATC. This will be auto-generated
      using the IP of each ATC VM if not specified.

      Note that this refers to an *individual ATC*, not the whole cluster. This
      property is only useful if you're deploying in a way that cannot
      autodetect its own IP, e.g. a `bosh-init` deployment.

      You should otherwise leave this value blank.

  atc.publicly_viewable:
    description: |
      Allow viewing of pipelines as an anonymous user. Destructive operations
      still require auth, and the output of builds will only be visible if
      their job is configured with `public: true`.

      This is useful for open-source projects, or as a convenience to make
      monitoring your pipeline status easier.
    default: false

  atc.development_mode:
    description: |
      Loosen up security for development purposes. This allows the ATC to be
      configured with no authentication methods.
    default: false

  atc.basic_auth_username:
    description: |
      Username for HTTP basic auth.
    default: ""

  atc.basic_auth_password:
    description: |
      Password for HTTP basic auth, in plaintext.
    default: ""

  atc.github_auth.client_id:
    description: |
      GitHub client ID to use for OAuth.

      The application must be configured with its callback URL as
      `{atc.external_url}/auth/github/callback` (replacing `{atc.external_url}`
      with the actual value).
    default: ""

  atc.github_auth.client_secret:
    description: |
      GitHub client secret to use for OAuth.

      The application must be configured with its callback URL as
      `{atc.external_url}/auth/github/callback` (replacing `{atc.external_url}`
      with the actual value).
    default: ""

  atc.github_auth.authorize:
    default: []
    description: |
      An array of different criteria to check for when authorizing a GitHub
      user. If empty, GitHub authorization is effectively disabled.
    example:
    - organization: org1
      teams: all
    - organization: org2
      teams: [Team 1, Team 2]
    - user: user1
    - user: user2

  atc.default_check_interval:
    description: |
      The interval, in Go duration format (1m = 1 minute), on which to check
      for new versions of resources.

      This can also be specified on a per-resource basis by specifying
      `check_every` on the resource config.
    default: 1m

  atc.resource_cache_cleanup_interval:
    description: |
      The interval, in Go duration format (1m = 1 minute), on which to check
      for and release old caches of resource versions.
    default: 30s

  atc.old_resource_grace_period:
    description: |
      How long to cache the result of a get step after a newer version of the
      resource is found. Use Go duration format (1m = 1 minute).
    default: 5m

  atc.retention.container.success_duration:
    description: |
      The duration to keep a succeeded step's containers before expiring them.
    default: 5m

  atc.retention.container.failure_duration:
    description: |
      The duration to keep a failed step's containers before expiring them.
    default: 1h

  atc.yeller.api_key:
    description: |
      If configured, errors emitted to the logs will also be emitted to Yeller.
      This is only really useful for Concourse developers.
    default: ""

  atc.yeller.environment_name:
    description: |
      Environment name to specify for errors emitted to Yeller.
    default: ""

  atc.riemann.host:
    description: |
      If configured, detailed metrics will be emitted to the specified Riemann
      server.
    default: ""

  atc.riemann.port:
    description: |
      Port of the Riemann server to emit events to.
    default: 5555

  atc.postgresql.address:
    description: |
      Address of the PostgreSQL server, in `HOST:PORT` format.
    default: postgresql.service.dc1.consul:5432

  atc.postgresql.database:
    description: |
      Name of the database to use.
    default: atc

  atc.postgresql.role.name:
    description: |
      Name of role to connect with.
    default: atc

  atc.postgresql.role.password:
    description: |
      password to use when connecting.

  consul.agent.services.atc:
    description: |
      This property auto-configured `consul-agent` to register the ATC as a
      service. You shouldn't need to touch it.
    default: {}

  blackbox.syslog.sources.atc:
    description: |
      This property auto-configures `blackbox` to emit ATC's logs to its syslog
      drain. You shouldn't need to touch it.
    default:
      - /var/vcap/sys/log/atc/atc.stdout.log
      - /var/vcap/sys/log/atc/atc.stderr.log
      - /var/vcap/sys/log/monit/atc_ctl.out.log
      - /var/vcap/sys/log/monit/atc_ctl.err.log

