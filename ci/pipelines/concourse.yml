groups:
- name: concourse
  jobs:
  - atc
  - blackbox
  - deploy
  - fly
  - go-concourse
  - baggageclaim
  - jettison
  - tsa
  - major
  - minor
  - patch
  - rc
  - bosh-rc
  - bin-rc
  - shipit
  - testflight
  - bin-testflight

- name: publish
  jobs:
  - github-release
  - hangar
  - product
  - publish-houdini
  - push-departures
  - push-docs
  - virtualbox-box
  - virtualbox-testflight
  - release-virtualbox-box

- name: bosh-lite
  jobs: [provision, teardown]

- name: rubbish-bin
  jobs:
  - master-merge
  - unfudge
  - tracksuit

jobs:
- name: fly
  public: true
  plan:
  - get: concourse
    trigger: true
  - aggregate:
    - task: linux
      file: concourse/ci/fly-linux.yml
    - task: darwin
      file: concourse/ci/fly-darwin.yml
    - task: windows
      file: concourse/ci/fly-windows.yml

- name: go-concourse
  public: true
  plan:
  - get: concourse
    trigger: true
  - task: go-unit
    file: concourse/ci/go-concourse.yml

- name: atc
  public: true
  serial: true
  plan:
  - get: concourse
    trigger: true
  - aggregate:
    - task: go-unit
      file: concourse/ci/atc-go.yml
      params:
        GITHUB_ACCESS_TOKEN: {{github-api-test-access-token}}
    - task: js-unit
      file: concourse/ci/atc-js.yml
      attempts: 3
      timeout: 5m

- name: baggageclaim
  public: true
  serial: true
  plan:
  - get: concourse
    trigger: true
  - task: build
    privileged: true
    file: concourse/ci/baggageclaim.yml

- name: blackbox
  public: true
  plan:
  - get: concourse
    trigger: true
  - task: build
    file: concourse/ci/blackbox.yml

- name: jettison
  public: true
  plan:
  - get: concourse
    trigger: true
  - task: build
    file: concourse/ci/jettison.yml

- name: tsa
  public: true
  plan:
  - get: concourse
    trigger: true
  - task: build
    file: concourse/ci/tsa.yml

- name: major
  public: true
  serial_groups: [version]
  plan:
  - get: version
    params: {bump: major, pre: rc}
  - put: version
    params: {file: version/version}

- name: minor
  public: true
  serial_groups: [version]
  plan:
  - get: version
    params: {bump: minor, pre: rc}
  - put: version
    params: {file: version/version}

- name: patch
  public: true
  serial_groups: [version]
  plan:
  - get: version
    passed: [shipit]
    params: {bump: patch, pre: rc}
    trigger: true
  - put: version
    params: {file: version/version}

- name: rc
  public: true
  serial_groups: [version]
  plan:
  - get: concourse
    trigger: true
    passed: [atc, fly, go-concourse, blackbox, tsa, jettison, baggageclaim]
  - get: garden-linux
  - get: version
    params: {pre: rc}
  - put: version
    params: {file: version/version}

- name: bosh-rc
  public: true
  plan:
  - get: concourse
    passed: [rc]
    trigger: true
  - get: garden-linux
    passed: [rc]
    trigger: true
  - get: version
    passed: [rc]
    trigger: true
  - get: final-version
    resource: version
    passed: [rc]
    params: {bump: final}
    trigger: true
  - task: create-candidate-release
    file: concourse/ci/create-candidate-release.yml
  - put: candidate-release
    params: {file: candidate-release/concourse-*.tgz}

- name: bin-rc
  public: true
  serial: true
  plan:
  - aggregate:
    - get: concourse
      passed: [rc]
      trigger: true
    - get: version
      passed: [rc]
      trigger: true
    - get: final-version
      resource: version
      passed: [rc]
      params: {bump: final}
      trigger: true
    - get: garden-linux
      passed: [rc]
      trigger: true
    - get: bin
      trigger: true
    - get: houdini
      trigger: true
    - get: garden-linux-src
  - task: checkout-release-tag
    file: concourse/ci/checkout-garden-linux.yml
  - task: build-cli-artifacts
    file: bin/ci/build-cli-artifacts.yml
  - aggregate:
    - task: build-linux
      file: bin/ci/build-linux.yml
      output_mapping: {binary: linux-binary}
    - task: build-darwin
      file: bin/ci/build-darwin.yml
      output_mapping: {binary: darwin-binary}
    - task: build-windows
      file: bin/ci/build-windows.yml
      output_mapping: {binary: windows-binary}
  - task: build-release
    file: bin/ci/build-release.yml
  - put: bin-rc
    params:
      name: release/name
      tag: release/tag
      body: release/body
      globs: [release/artifacts/*]

- name: provision
  serial: true
  plan:
  - get: deployments
  - get: bosh-lite
  - task: provision
    file: deployments/lite/ci/provision-bosh-lite.yml
  - put: bosh-lites
    params:
      add: bosh-lite-lock

- name: teardown
  serial: true
  plan:
  - put: bosh-lites
    params: {acquire: true}
  - do:
    - get: deployments
    - task: teardown
      file: deployments/lite/ci/teardown-bosh-lite.yml
    on_success:
      put: bosh-lites
      params: {remove: bosh-lites}
    on_failure:
      put: bosh-lites
      params: {release: bosh-lites}

- name: testflight
  public: true
  serial: true
  plan:
  - put: bosh-lites
    params: {acquire: true}
  - ensure:
      put: bosh-lites
      params: {release: bosh-lites}
    do:
    - aggregate:
      - get: concourse
        passed: [bosh-rc]
        trigger: true
      - get: candidate-release
        passed: [bosh-rc]
        trigger: true
      - get: version
        passed: [bosh-rc]
        trigger: true
      - get: garden-linux-release
        passed: [bosh-rc]
        trigger: true
        resource: garden-linux
      - get: lite-stemcell
      - get: deployments
    - put: lite-deployment
      params:
        manifest: deployments/lite/ci/manifests/no_auth_deployment.yml
        target_file: bosh-lites/metadata
        stemcells: [lite-stemcell/*.tgz]
        releases:
          - garden-linux-release/*.tgz
          - candidate-release/concourse-*.tgz
    - task: no-auth-build
      file: concourse/ci/testflight.yml
      params:
        ATC_URL: "http://10.244.15.2:8080"
      timeout: 1h
      on_failure:
        do:
          - task: export-bosh-logs
            file: concourse/ci/export-bosh-logs.yml
            params:
              MANIFEST: deployments/lite/ci/manifests/no_auth_deployment.yml
              BOSH_USER: admin
              BOSH_PASSWORD: admin
          - put: testflight-logs
            params: {file: exported-logs/concourse.*.tgz}

- name: bin-testflight
  public: true
  serial: true
  plan:
  - aggregate:
    - get: bin
      passed: [bin-rc]
      trigger: true
    - get: concourse
      passed: [bin-rc]
      trigger: true
    - get: linux-binary
      resource: bin-rc
      passed: [bin-rc]
      trigger: true
    - get: version
      passed: [bin-rc]
      trigger: true
  - task: no-auth
    file: bin/ci/testflight.yml
    privileged: true
    timeout: 1h
  # - aggregate:
  #   - task: basic-auth-public
  #     file: bin/ci/testflight.yml
  #     params:
  #       BASIC_AUTH_USERNAME: {{testflight-basic-auth-username}}
  #       BASIC_AUTH_PASSWORD: {{testflight-basic-auth-password}}
  #       PIPELINES_PUBLICLY_VIEWABLE: true
  #     privileged: true
  #     timeout: 1h
  #   - task: basic-auth-private
  #     file: bin/ci/testflight.yml
  #     params:
  #       BASIC_AUTH_USERNAME: {{testflight-basic-auth-username}}
  #       BASIC_AUTH_PASSWORD: {{testflight-basic-auth-password}}
  #       PIPELINES_PUBLICLY_VIEWABLE: false
  #     privileged: true
  #     timeout: 1h
  # - aggregate:
  #   - task: github-auth-public
  #     file: bin/ci/testflight.yml
  #     params:
  #       GITHUB_AUTH_USERNAME: {{testflight-github-auth-username}}
  #       GITHUB_AUTH_PASSWORD: {{testflight-github-auth-password}}
  #       GITHUB_AUTH_CONFIG_ORGANIZATION: {{testflight-github-auth-organization}}
  #       GITHUB_AUTH_CONFIG_CLIENT_ID: {{testflight-github-auth-public-client-id}}
  #       GITHUB_AUTH_CONFIG_CLIENT_SECRET: {{testflight-github-auth-public-client-secret}}
  #       PIPELINES_PUBLICLY_VIEWABLE: true
  #     privileged: true
  #     timeout: 1h
  #   - task: github-auth-private
  #     file: bin/ci/testflight.yml
  #     params:
  #       GITHUB_AUTH_USERNAME: {{testflight-github-auth-username}}
  #       GITHUB_AUTH_PASSWORD: {{testflight-github-auth-password}}
  #       GITHUB_AUTH_CONFIG_ORGANIZATION: {{testflight-github-auth-organization}}
  #       GITHUB_AUTH_CONFIG_CLIENT_ID: {{testflight-github-auth-private-client-id}}
  #       GITHUB_AUTH_CONFIG_CLIENT_SECRET: {{testflight-github-auth-private-client-secret}}
  #       PIPELINES_PUBLICLY_VIEWABLE: false
  #     privileged: true
  #     timeout: 1h

- name: deploy
  serial: true
  plan:
  - aggregate:
    - get: concourse
      params: {submodules: none}
      passed: [testflight, bin-testflight]
      trigger: true
    - get: version
      passed: [testflight, bin-testflight]
      trigger: true
    - get: candidate-release
      passed: [testflight]
      trigger: true
    - get: garden-linux-release
      resource: garden-linux
      passed: [testflight]
      trigger: true
    - get: bin-rc
      passed: [bin-testflight]
      trigger: true
    - get: bosh-stemcell
      resource: aws-stemcell
    - get: deployments
      trigger: true
  - put: aws-deployment
    params:
      cleanup: true
      manifest: deployments/ci/deployments/concourse.yml
      stemcells: [bosh-stemcell/*.tgz]
      releases:
        - garden-linux-release/*.tgz
        - candidate-release/concourse-*.tgz
  - task: emit-yeller-deploy
    file: concourse/ci/emit-yeller-deploy.yml
    params:
      YELLER_API_KEY: {{yeller-api-key}}
      YELLER_USER: {{yeller-user}}
      YELLER_ENVIRONMENT: {{yeller-environment-name}}
  - put: tracker
    params: {repos: [concourse]}

- name: unfudge
  plan:
  - get: bosh-lites
  - put: bosh-lites
    params: {release: bosh-lites}

- name: shipit
  serial_groups: [version]
  plan:
  - aggregate:
    - get: concourse
      passed: [deploy]
      params: {submodules: none}
    - get: candidate-release
      passed: [deploy]
    - get: version
      passed: [deploy]
      params: {bump: final}
    - get: garden-linux-release
      passed: [deploy]
      resource: garden-linux
    - get: bin-rc
      passed: [deploy]
    - get: deployments
  - task: finalize-release
    file: concourse/ci/finalize-release.yml
  - aggregate:
    - put: version
      params: {file: version/version}
    - put: concourse-master
      params:
        repository: final-release-repo
        tag: version/version
        tag_prefix: v
    - put: final-release
      params: {file: final-release-tarball/concourse-*.tgz}

- name: virtualbox-box
  public: true
  serial: true
  plan:
  - aggregate:
    - get: final-release
      passed: [shipit]
      trigger: true
    - get: garden-linux-release
      passed: [shipit]
      resource: garden-linux
      trigger: true
    - get: concourse
      params: {submodules: none}
      passed: [shipit]
      trigger: true
    - get: version
      passed: [shipit]
    - get: concourse-lite
  - task: build-box
    privileged: true
    file: concourse-lite/ci/build-boxes.yml
    tags: [hetzner]
  - put: virtualbox-box
    params: {file: built-box/*.box}

- name: virtualbox-testflight
  public: true
  serial: true
  plan:
  - put: hetzner
    params: {acquire: true}
  - do:
    - aggregate:
      - get: virtualbox-box
        passed: [virtualbox-box]
        trigger: true
      - get: concourse
        passed: [virtualbox-box]
      - get: concourse-lite
        passed: [virtualbox-box]
      - get: version
        passed: [virtualbox-box]
    - task: testflight
      privileged: true
      file: concourse-lite/ci/testflight.yml
      tags: [hetzner]
    ensure:
      put: hetzner
      params: {release: hetzner}

- name: release-virtualbox-box
  public: true
  serial: true
  plan:
  - aggregate:
    - get: virtualbox-box
      passed: [virtualbox-testflight]
      trigger: true
    - get: version
      passed: [virtualbox-testflight]
    - get: concourse
      passed: [virtualbox-testflight]
  - task: build-release-notes
    file: concourse/ci/build-release-notes.yml
  - put: virtualbox-box-cloud
    params:
      description: release-notes/notes.md
      release: true
      url: virtualbox-box/url
      version: virtualbox-box/version

- name: push-docs
  serial: true
  plan:
  - aggregate:
    - get: version
      trigger: true
      passed: [shipit]
    - get: concourse
      params: {submodules: none}
      resource: concourse-develop
  - task: build-docs
    file: concourse/ci/build-docs.yml
    params:
      ANALYTICS_ID: {{analytics-id}}
  - put: concourse-docs
    params:
      current_app_name: docs
      manifest: built-docs/manifest.yml

- name: push-departures
  serial: true
  plan:
  - get: departures
    trigger: true
  - put: departures-app
    params:
      current_app_name: departures
      manifest: departures/manifest.yml

- name: github-release
  plan:
  - aggregate:
    - get: final-release
      passed: [shipit]
      trigger: true
    - get: garden-linux
      passed: [shipit]
      trigger: true
    - get: bin-rc
      passed: [shipit]
      trigger: true
    - get: concourse
      params: {submodules: none}
      passed: [shipit]
      trigger: true
    - get: concourse-master
      params: {submodules: none}
      passed: [shipit]
      trigger: true
    - get: version
      passed: [shipit]
      trigger: true
  - aggregate:
    - task: build-release-notes
      file: concourse/ci/build-release-notes.yml
    - task: rename-release
      file: concourse/ci/rename-release.yml
    - task: generate-commitish
      config:
        platform: linux

        image_resource:
          type: docker-image
          source: {repository: concourse/git-resource}

        inputs:
        - name: concourse-master

        outputs:
        - name: generated-commitish

        run:
          path: sh
          args:
          - -c
          - |
            git -C concourse-master rev-parse HEAD > generated-commitish/commitish
  - put: github-release
    params:
      name: release-notes/release-name
      tag: release-notes/release-name
      body: release-notes/notes.md
      commitish: generated-commitish/commitish
      globs:
      - final-release/*.tgz
      - renamed-release/garden-linux-*.tgz
      - bin-rc/concourse_*

- name: product
  serial: true
  plan:
  - aggregate:
    - get: p-concourse
      trigger: true
    - get: final-release
      passed: [shipit]
      trigger: true
    - get: garden-linux-release
      passed: [shipit]
      resource: garden-linux
      trigger: true
    - get: version
      trigger: true
      passed: [shipit]
  - task: build
    file: p-concourse/ci/build.yml
  - put: product
    params: {file: product/p-concourse-*.pivotal}

- name: hangar
  public: true
  plan:
  - get: hangar
    trigger: true
  - task: build
    file: hangar/build.yml

- name: publish-houdini
  plan:
  - get: houdini
    trigger: true
  - task: build-artifacts
    file: houdini/ci/build-artifacts.yml
  - put: houdini-artifacts
    params:
      name: release/release-name
      tag: release/release-name
      globs: [release/artifacts/*]

- name: master-merge
  plan:
  - aggregate:
    - get: concourse-master
      params: {submodules: none}
      trigger: true
    - get: concourse-develop
      params: {submodules: none}
  - task: merge-to-develop
    file: concourse-develop/ci/master-merge.yml
  - put: concourse
    params: {repository: concourse-merged}

- name: tracksuit
  serial: true
  plan:
  - get: periodic-tracksuit
    trigger: true
  - get: tracksuit
  - task: tracksuit
    file: tracksuit/run.yml
    params:
      GITHUB_TOKEN: {{tracksuit-github-token}}
      TRACKER_TOKEN: {{tracksuit-tracker-token}}
      PROJECT_ID: 1059262
      ORGANIZATION: concourse

resources:
- name: version
  type: semver
  source:
    bucket: concourse-releases
    key: current-version
    access_key_id: {{pipeline-bucket-access-key}}
    secret_access_key: {{pipeline-bucket-secret-key}}

- name: final-release
  type: s3
  source:
    bucket: concourse-releases
    regexp: concourse-(.*).tgz
    access_key_id: {{pipeline-bucket-access-key}}
    secret_access_key: {{pipeline-bucket-secret-key}}

- name: candidate-release
  type: s3
  source:
    bucket: concourse-release-candidates
    regexp: concourse-(.*).tgz
    access_key_id: {{pipeline-bucket-access-key}}
    secret_access_key: {{pipeline-bucket-secret-key}}

- name: virtualbox-box
  type: s3
  source:
    bucket: concourse-boxes
    regexp: concourse-virtualbox-ubuntu-trusty-(.*).box
    access_key_id: {{pipeline-bucket-access-key}}
    secret_access_key: {{pipeline-bucket-secret-key}}

- name: aws-deployment
  type: bosh-deployment
  source:
    target: {{bosh-target}}
    deployment: {{bosh-deployment}}
    client_id: {{bosh-client-id}}
    client_secret: {{bosh-client-secret}}

- name: lite-deployment
  type: bosh-deployment
  source: &lite-defaults
    username: admin
    password: admin
    deployment: concourse-testflight

- name: lite-deployment-basic-auth-public
  type: bosh-deployment
  source:
    <<: *lite-defaults
    deployment: concourse-testflight-basic-auth-public

- name: lite-deployment-basic-auth-private
  type: bosh-deployment
  source:
    <<: *lite-defaults
    deployment: concourse-testflight-basic-auth-private

- name: lite-deployment-github-auth-public
  type: bosh-deployment
  source:
    <<: *lite-defaults
    deployment: concourse-testflight-github-auth-public

- name: lite-deployment-github-auth-private
  type: bosh-deployment
  source:
    <<: *lite-defaults
    deployment: concourse-testflight-github-auth-private

- name: virtualbox-box-cloud
  type: vagrant-cloud
  source:
    username: concourse
    box: lite
    provider: virtualbox
    access_token: {{atlas-access-token}}

- name: garden-linux
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/garden-linux-release

- name: tracker
  type: tracker
  source:
    tracker_url: https://www.pivotaltracker.com
    project_id: "1059262"
    token: {{tracker-token}}

- name: aws-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent

- name: lite-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-warden-boshlite-ubuntu-trusty-go_agent

- name: concourse-lite
  type: git
  source:
    uri: https://github.com/concourse/concourse-lite.git
    branch: master

- name: concourse-develop
  type: git
  source:
    uri: https://github.com/concourse/concourse.git
    branch: develop

- name: concourse-docs
  type: cf
  source:
    api: {{cf-target}}
    username: {{cf-username}}
    password: {{cf-password}}
    organization: {{cf-organization}}
    space: {{cf-space}}

- name: departures
  type: git
  source:
    uri: https://github.com/vito/departure-board.git
    branch: master

- name: departures-app
  type: cf
  source:
    api: {{cf-target}}
    username: {{cf-username}}
    password: {{cf-password}}
    organization: {{cf-organization}}
    space: {{cf-space}}

- name: github-release
  type: github-release
  source:
    access_token: {{concourse-github-release-access-token}}
    repository: concourse
    user: concourse

- name: concourse
  type: git
  source:
    uri: git@github.com:concourse/concourse.git
    branch: develop
    private_key: {{concourse-repo-private-key}}

- name: concourse-master
  type: git
  source:
    uri: git@github.com:concourse/concourse.git
    branch: master
    private_key: {{concourse-repo-private-key}}

- name: bosh-lite
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-lite.git
    branch: master

- name: hangar
  type: git
  source:
    uri: https://github.com/concourse/hangar.git
    branch: master

- name: p-concourse
  type: git
  source:
    uri: https://github.com/concourse/p-concourse.git
    branch: master

- name: product
  type: s3
  source:
    bucket: concourse-product
    regexp: p-concourse-(.*).pivotal
    access_key_id: {{pipeline-bucket-access-key}}
    secret_access_key: {{pipeline-bucket-secret-key}}

- name: deployments
  type: git
  source:
    uri: git@github.com:concourse/deployments.git
    branch: master
    private_key: {{deployments-repo-private-key}}

- name: houdini
  type: git
  source:
    uri: https://github.com/vito/houdini.git
    branch: master

- name: houdini-artifacts
  type: github-release
  source:
    user: vito
    repository: houdini
    access_token: {{houdini-github-release-access-token}}

- name: bosh-lites
  type: pool
  source:
    uri: git@github.com:concourse/locks.git
    branch: master
    pool: bosh-lites
    private_key: {{locks-repo-private-key}}

- name: hetzner
  type: pool
  source:
    uri: git@github.com:concourse/locks.git
    branch: master
    pool: hetzner
    private_key: {{locks-repo-private-key}}

- name: tracksuit
  type: git
  source:
    uri: https://github.com/vito/tracksuit.git

- name: periodic-tracksuit
  type: time
  source:
    interval: 10m

- name: testflight-logs
  type: s3
  source:
    bucket: concourse-testflight-bosh-logs
    access_key_id: {{s3-testflight-log-access-key}}
    secret_access_key: {{s3-testflight-log-secret-key}}
    versioned_file: bosh-logs
    region_name: us-west-1

- name: bin
  type: git
  source:
    uri: https://github.com/concourse/bin
    branch: master

- name: garden-linux-src
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/garden-linux-release
    branch: master

- name: bin-rc
  type: github-release
  source:
    user: concourse
    repository: bin
    access_token: {{bin-release-token}}
